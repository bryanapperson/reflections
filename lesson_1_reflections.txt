How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    IT made seing a subset of only the changed text possible.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    The ability to see where mistakes were made, how extra work can be avoided.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I think manually creating a commit is superior. Automatic saves can happen
    to disk. The only downside of a manual commit is that you may lose data if
    your PC HD fails before committing. Otherwise yoyur changes will still be
    on local disk.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google docs is not intended to version the state of a software, but rather
    a single document. Different use cases.

How can you use the commands git log and git diff to view the history of files?

    Git log can show a timelines of commits made and who made them. Git diff can
    be used to show the differences, or summary of differences, between two
    commits.

How might using version control make you more confident to make changes that
could break something?

    Because trackiong the change that caused the breakage becomes much easier
    using proper git practices.

Now that you have your workspace set up, what do you want to try using Git for?

    Versioning software.
